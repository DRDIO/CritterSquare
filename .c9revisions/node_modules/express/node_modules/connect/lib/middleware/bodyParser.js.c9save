{"ts":1349660456473,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\n/*!\n * Connect - bodyParser\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar multipart = require('./multipart')\n  , urlencoded = require('./urlencoded')\n  , json = require('./json');\n\n/**\n * Body parser:\n * \n *   Parse request bodies, supports _application/json_,\n *   _application/x-www-form-urlencoded_, and _multipart/form-data_.\n *\n *   This is equivalent to: \n *\n *     app.use(connect.json());\n *     app.use(connect.urlencoded());\n *     app.use(connect.multipart());\n *\n * Examples:\n *\n *      connect()\n *        .use(connect.bodyParser())\n *        .use(function(req, res) {\n *          res.end('viewing user ' + req.body.user.name);\n *        });\n *\n *      $ curl -d 'user[name]=tj' http://local/\n *      $ curl -d '{\"user\":{\"name\":\"tj\"}}' -H \"Content-Type: application/json\" http://local/\n *\n *  View [json](json.html), [urlencoded](urlencoded.html), and [multipart](multipart.html) for more info.\n *\n * @param {Object} options\n * @return {Function}\n * @api public\n */\n\nexports = module.exports = function bodyParser(options){\n  var _urlencoded = urlencoded(options)\n    , _multipart = multipart(options)\n    , _json = json(options);\n\n  return function bodyParser(req, res, next) {\n    _json(req, res, function(err){\n      if (err) return next(err);\n      _urlencoded(req, res, function(err){\n        if (err) return next(err);\n        _multipart(req, res, next);\n      });\n    });\n  }\n};"]],"start1":0,"start2":0,"length1":0,"length2":1480}]],"length":1480}
