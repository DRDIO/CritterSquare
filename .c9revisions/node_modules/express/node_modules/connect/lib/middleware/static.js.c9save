{"ts":1349660469691,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\n/*!\n * Connect - static\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar send = require('send')\n  , utils = require('../utils')\n  , parse = utils.parseUrl\n  , url = require('url');\n\n/**\n * Static:\n *\n *   Static file server with the given `root` path.\n *\n * Examples:\n *\n *     var oneDay = 86400000;\n *\n *     connect()\n *       .use(connect.static(__dirname + '/public'))\n *\n *     connect()\n *       .use(connect.static(__dirname + '/public', { maxAge: oneDay }))\n *\n * Options:\n *\n *    - `maxAge`     Browser cache maxAge in milliseconds. defaults to 0\n *    - `hidden`     Allow transfer of hidden files. defaults to false\n *    - `redirect`   Redirect to trailing \"/\" when the pathname is a dir. defaults to true\n *\n * @param {String} root\n * @param {Object} options\n * @return {Function}\n * @api public\n */\n\nexports = module.exports = function static(root, options){\n  options = options || {};\n\n  // root required\n  if (!root) throw new Error('static() root path required');\n\n  // default redirect\n  var redirect = false === options.redirect ? false : true;\n\n  return function static(req, res, next) {\n    if ('GET' != req.method && 'HEAD' != req.method) return next();\n    var path = parse(req).pathname;\n    var pause = utils.pause(req);\n\n    function resume() {\n      next();\n      pause.resume();\n    }\n\n    function directory() {\n      if (!redirect) return resume();\n      var pathname = url.parse(req.originalUrl).pathname;\n      res.statusCode = 301;\n      res.setHeader('Location', pathname + '/');\n      res.end('Redirecting to ' + utils.escape(pathname) + '/');\n    }\n\n    function error(err) {\n      if (404 == err.status) return resume();\n      next(err);\n    }\n\n    send(req, path)\n      .maxage(options.maxAge || 0)\n      .root(root)\n      .hidden(options.hidden)\n      .on('error', error)\n      .on('directory', directory)\n      .pipe(res);\n  };\n};\n\n/**\n * Expose mime module.\n * \n * If you wish to extend the mime table use this\n * reference to the \"mime\" module in the npm registry.\n */\n\nexports.mime = send.mime;\n"]],"start1":0,"start2":0,"length1":0,"length2":2119}]],"length":2119}
