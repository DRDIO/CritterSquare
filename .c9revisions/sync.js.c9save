{"ts":1356800044821,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1356800118986,"patch":[[{"diffs":[[1,"var async   = require('async')     // ASYNC used to load multiple sources and wait for all responses\n  , promise = require('q')\n  , db      = require('../database')\n  , cats    = require('../categories')\n  , monster = require('../monster')\n  , user    = require('../user')\n  , fsq     = require('../foursquare')\n  \nexports.method = function() {\n    // Check if logged in\n    if (req.session.token) {\n        // Perform parallel requests to get FSQ information\n        async.parallel({\n            // Get the user information\n            user: function(callback) { \n                user.get(callback);\n            },\n            \n            // Get all checkins\n            checkins: function(callback) {\n                user.getCheckins(callback);\n            },\n            \n        }, function(err, data) {\n            var promises = [];\n            \n            for (var i in data.checkins.items) {\n                var venue = data.checkins.items[i].venue;\n                for (var j in venue.categories) {\n                    if (venue.categories[j].primary) {\n                        venue.top = cats.findTop(cats.get(), venue.categories[j].id, true);\n                        promises.push(monster.create(\n                            venue.id, \n                            venue.top, \n                            venue.stats.checkinsCount, \n                            venue.stats.usersCount,\n                            venue.name,\n                            data.user.firstName + ' ' + data.user.lastName\n                        ));\n                    }\n                }\n            }\n\n            data.monsters = [];\n            \n            promise.allResolved(promises).then(function (promises) {\n                promises.forEach(function (row) {\n                    if (row.isFulfilled()) {\n                        data.monsters.push(row.valueOf());\n                    } else {\n                        console.log(row.valueOf().exception);\n                    }\n                });\n                \n                user.setMonsters(data.monsters);\n            });\n        }); "]],"start1":0,"start2":0,"length1":0,"length2":2091}]],"length":2091,"saved":false}
{"ts":1356800151563,"patch":[[{"diffs":[[0,"  //"],[-1," Check if logged in\n    if (req.session.token) {\n        //"],[0," Per"]],"start1":347,"start2":347,"length1":67,"length2":8},{"diffs":[[0,"ion\n    "],[-1," "],[-1,"   "],[0,"async.pa"]],"start1":397,"start2":397,"length1":20,"length2":16},{"diffs":[[0,"allel({\n"],[-1,"    "],[0,"        "]],"start1":414,"start2":414,"length1":20,"length2":16},{"diffs":[[0,"ion\n        "],[-1," "],[-1,"   "],[0,"user: functi"]],"start1":454,"start2":454,"length1":28,"length2":24},{"diffs":[[0,"ack) { \n"],[-1,"    "],[0,"        "]],"start1":486,"start2":486,"length1":20,"length2":16},{"diffs":[[0,"lback);\n        "],[-1,"    "],[0,"},\n            \n"]],"start1":518,"start2":518,"length1":36,"length2":32},{"diffs":[[0," },\n        "],[-1,"  "],[-1,"  \n    "],[1,"\n"],[0,"        // G"]],"start1":533,"start2":533,"length1":33,"length2":25},{"diffs":[[0,"        "],[-1,"   "],[-1," "],[0,"checkins"]],"start1":574,"start2":574,"length1":20,"length2":16},{"diffs":[[0,") {\n            "],[-1,"    "],[0,"user.getCheckins"]],"start1":609,"start2":609,"length1":36,"length2":32},{"diffs":[[0,"k);\n        "],[-1,"   "],[-1," "],[0,"},\n         "]],"start1":649,"start2":649,"length1":28,"length2":24},{"diffs":[[0,"        "],[-1,"    \n  "],[1,"\n"],[0,"    "],[-1,"  "],[0,"}, funct"]],"start1":664,"start2":664,"length1":29,"length2":21},{"diffs":[[0,") {\n        "],[-1,"    "],[0,"var promises"]],"start1":698,"start2":698,"length1":28,"length2":24},{"diffs":[[0,"[];\n        "],[-1,"  "],[-1,"  \n    "],[1,"\n"],[0,"        for "]],"start1":725,"start2":725,"length1":33,"length2":25},{"diffs":[[0,"            "],[-1," "],[-1,"   "],[0,"var venue = "]],"start1":783,"start2":783,"length1":28,"length2":24},{"diffs":[[0,"            "],[-1,"    "],[0,"for (var j i"]],"start1":837,"start2":837,"length1":28,"length2":24},{"diffs":[[0,"            "],[-1," "],[-1,"   "],[0,"if (venue.ca"]],"start1":887,"start2":887,"length1":28,"length2":24},{"diffs":[[0,".primary) {\n"],[-1,"    "],[0,"            "]],"start1":922,"start2":922,"length1":28,"length2":24},{"diffs":[[0,"                "],[-1,"    "],[0,"promises.push(mo"]],"start1":1026,"start2":1026,"length1":36,"length2":32},{"diffs":[[0,"create(\n"],[-1,"    "],[0,"        "]],"start1":1064,"start2":1064,"length1":20,"length2":16},{"diffs":[[0,"                "],[-1,"    "],[0,"venue.top, \n    "]],"start1":1115,"start2":1115,"length1":36,"length2":32},{"diffs":[[0,"                "],[-1,"   "],[-1," "],[0,"venue.stats.chec"]],"start1":1151,"start2":1151,"length1":36,"length2":32},{"diffs":[[0,"                "],[-1,"    "],[0,"venue.stats.user"]],"start1":1203,"start2":1203,"length1":36,"length2":32},{"diffs":[[0,"            "],[-1,"   "],[-1," "],[0,"venue.name,\n"]],"start1":1255,"start2":1255,"length1":28,"length2":24},{"diffs":[[0,"e.name,\n"],[-1,"    "],[0,"        "]],"start1":1271,"start2":1271,"length1":20,"length2":16},{"diffs":[[0,"    "],[-1,"  "],[-1,"  "],[0,"));\n"],[-1,"                    }\n"],[0,"    "]],"start1":1366,"start2":1366,"length1":38,"length2":12},{"diffs":[[0,"      }\n"],[-1,"\n"],[0," "],[1,"       }\n\n"],[0,"        "],[-1,"   "],[0,"data.mon"]],"start1":1398,"start2":1398,"length1":29,"length2":35},{"diffs":[[0,"[];\n        "],[-1,"    \n    "],[1,"\n"],[0,"        prom"]],"start1":1441,"start2":1441,"length1":33,"length2":25},{"diffs":[[0,"promises) {\n"],[-1,"    "],[0,"            "]],"start1":1507,"start2":1507,"length1":28,"length2":24},{"diffs":[[0,"            "],[-1,"    "],[0,"if (row.isFu"]],"start1":1569,"start2":1569,"length1":28,"length2":24},{"diffs":[[0,"filled()) {\n"],[-1,"    "],[0,"            "]],"start1":1594,"start2":1594,"length1":28,"length2":24},{"diffs":[[0,"        "],[-1,"    "],[0,"} else {"]],"start1":1669,"start2":1669,"length1":20,"length2":16},{"diffs":[[0,"        "],[-1,"   "],[-1," "],[0,"console."]],"start1":1698,"start2":1698,"length1":20,"length2":16},{"diffs":[[0,"            "],[-1,"    }\n    "],[1,"}\n"],[0,"            "]],"start1":1748,"start2":1748,"length1":34,"length2":26},{"diffs":[[0,"            "],[-1,"    \n  "],[1,"\n"],[0,"            "]],"start1":1778,"start2":1778,"length1":31,"length2":25},{"diffs":[[0,"            "],[-1,"  "],[0,"user.setMons"]],"start1":1791,"start2":1791,"length1":26,"length2":24},{"diffs":[[0,"    "],[-1,"    "],[0,"});\n    "],[-1,"  "],[-1,"  "],[0,"}); "],[1,"\n};\n"]],"start1":1840,"start2":1840,"length1":24,"length2":20}]],"length":1860,"saved":false}
{"ts":1356800239686,"patch":[[{"diffs":[[0,"rts."],[-1,"method"],[1,"pull"],[0," = f"]],"start1":319,"start2":319,"length1":14,"length2":12},{"diffs":[[0,"unction("],[1,"syncCallback"],[0,") {\n    "]],"start1":331,"start2":331,"length1":16,"length2":28},{"diffs":[[0,"nction(c"],[-1,"allback"],[1,"b"],[0,") { \n   "]],"start1":484,"start2":484,"length1":23,"length2":17},{"diffs":[[0,"er.get(c"],[-1,"allback"],[1,"b"],[0,");\n     "]],"start1":512,"start2":512,"length1":23,"length2":17},{"diffs":[[0,"nction(c"],[-1,"allback"],[1,"b"],[0,") {\n    "]],"start1":592,"start2":592,"length1":23,"length2":17},{"diffs":[[0,"eckins(c"],[-1,"allback"],[1,"b"],[0,");\n     "]],"start1":627,"start2":627,"length1":23,"length2":17}]],"length":1846,"saved":false}
{"ts":1356800290914,"patch":[[{"diffs":[[0,"q')\n"],[-1,"  , db      = require('../database')\n"],[0,"  , "]],"start1":124,"start2":124,"length1":45,"length2":8},{"diffs":[[0,"r')\n"],[-1,"  , fsq     = require('../foursquare')\n"],[0,"  \ne"]],"start1":232,"start2":232,"length1":47,"length2":8},{"diffs":[[0,"ion("],[-1,"syncC"],[1,"c"],[0,"allback"],[1,"Sync"],[0,") {\n"]],"start1":259,"start2":259,"length1":20,"length2":20}]],"length":1770,"saved":false}
{"contributors":[],"silentsave":false,"ts":1356913638188,"patch":[[{"diffs":[[0,"quire('."],[-1,"."],[0,"/categor"]],"start1":144,"start2":144,"length1":17,"length2":16},{"diffs":[[0,"quire('."],[-1,"."],[0,"/monster"]],"start1":182,"start2":182,"length1":17,"length2":16},{"diffs":[[0,"quire('."],[-1,"."],[0,"/user')\n"]],"start1":217,"start2":217,"length1":17,"length2":16}]],"length":1767,"saved":false}
{"ts":1356914189401,"patch":[[{"diffs":[[0,"er')\n  \n"],[1,"\nexports.get = function(token, callback) {\n    fsq.Users.getUser('self', token, function(err, data) {\n        if (err) {\n            callback(err);\n        } else {\n            db.user.update({ fsid: data.user.id }, {\n                fsid: data.user.id,\n                name: data.user.firstName + ' ' + data.user.lastName,\n            }, { upsert: true });\n            \n            callback(null, data.user);\n        }\n    });\n}\n\nexports.getCheckins = function(token, callback) {\n    fsq.Users.getVenueHistory(null, null, token, function(err, data) {\n        if (err) {\n            callback(err);\n        } else {\n            callback(null, data.venues);\n        }\n    });\n}\n\nexports.getBadges = function(token, callback) {\n    fsq.Users.getBadges(null, token, function(err, data) {\n        if (err) {\n            callback(err);\n        } else {\n            callback(null, data.badges);\n        }\n    });\n}\n\n"],[0,"exports."]],"start1":228,"start2":228,"length1":16,"length2":925}]],"length":2676,"saved":false}
{"ts":1356914192056,"patch":[[{"diffs":[[0,"er')\n  \n"],[-1,"\n"],[0,"exports."]],"start1":228,"start2":228,"length1":17,"length2":16}]],"length":2675,"saved":false}
{"ts":1356914205260,"patch":[[{"diffs":[[0,"re('q')\n"],[1,"  , fsq     = require('./foursquare').get()\n"],[0,"  , cats"]],"start1":120,"start2":120,"length1":16,"length2":60}]],"length":2719,"saved":false}
{"ts":1356914218185,"patch":[[{"diffs":[[0,"ion("],[1,"token, "],[0,"callback"],[-1,"Sync"],[0,") {\n"]],"start1":1208,"start2":1208,"length1":20,"length2":23}]],"length":2722,"saved":false}
{"ts":1356914277671,"patch":[[{"diffs":[[0,".monsters);\n"],[1,"            \n            callback(null, data);\n"],[0,"        });\n"]],"start1":2686,"start2":2686,"length1":24,"length2":71}]],"length":2769,"saved":false}
{"ts":1356914299647,"patch":[[{"diffs":[[0,"ser.get("],[1,"token, "],[0,"cb);\n   "]],"start1":1387,"start2":1387,"length1":16,"length2":23}]],"length":2776,"saved":false}
{"ts":1356914305598,"patch":[[{"diffs":[[0,"heckins("],[1,"token, "],[0,"cb);\n   "]],"start1":1509,"start2":1509,"length1":16,"length2":23}]],"length":2783,"saved":false}
{"ts":1356914310799,"patch":[[{"diffs":[[0,"\n}\n\n"],[-1,"exports.getBadges = function(token, callback) {\n    fsq.Users.getBadges(null, token, function(err, data) {\n        if (err) {\n            callback(err);\n        } else {\n            callback(null, data.badges);\n        }\n    });\n}\n\n"],[0,"expo"]],"start1":952,"start2":952,"length1":240,"length2":8}]],"length":2551,"saved":false}
{"ts":1356914362661,"patch":[[{"diffs":[[0,"    "],[-1,"db."],[0,"user"]],"start1":452,"start2":452,"length1":11,"length2":8},{"diffs":[[0,"ate("],[-1,"{ fsid: "],[0,"data"]],"start1":464,"start2":464,"length1":16,"length2":8},{"diffs":[[0,"r.id"],[-1," }, {\n                fsid: data.user.id,\n                name: data.user.firstName + ' ' + data.user.lastName,\n            }, { upsert: true }"],[1,", name"],[0,");\n "]],"start1":476,"start2":476,"length1":151,"length2":14}]],"length":2403,"saved":false}
{"ts":1356914441453,"patch":[[{"diffs":[[0,"ser.id, "],[-1,"n"],[1,"data.user.firstName + ' ' + data.user.lastN"],[0,"ame);\n  "]],"start1":474,"start2":474,"length1":17,"length2":59}]],"length":2445,"saved":false}
{"ts":1356914449242,"patch":[[{"diffs":[[0,"       } else {\n"],[1,"            // Update user information in database\n"],[0,"            user"]],"start1":428,"start2":428,"length1":32,"length2":83}]],"length":2496,"saved":false}
{"ts":1356914480658,"patch":[[{"diffs":[[0,"lastName"],[-1,");\n        "],[1,", function(err, data) {\n"],[0,"    "],[-1,"\n"],[0,"        "]],"start1":571,"start2":571,"length1":32,"length2":44},{"diffs":[[0,"data.user);\n"],[1,"            });\n"],[0,"        }\n  "]],"start1":634,"start2":634,"length1":24,"length2":40}]],"length":2524,"saved":false}
{"ts":1356914490203,"patch":[[{"diffs":[[0,", function(err, "],[1,"user"],[0,"data) {\n        "]],"start1":579,"start2":579,"length1":32,"length2":36}]],"length":2528,"saved":false}
{"ts":1356914507281,"patch":[[{"diffs":[[0,"Name"],[-1,", function(err, userdata) {\n"],[1,");\n       "],[0,"     "],[1,"\n "],[0,"    "]],"start1":575,"start2":575,"length1":41,"length2":25},{"diffs":[[0,".user);\n"],[-1,"            });\n"],[0,"        "]],"start1":626,"start2":626,"length1":32,"length2":16}]],"length":2496,"saved":false}
{"ts":1356914545425,"patch":[[{"diffs":[[0,"e {\n"],[-1,"            // Update user information in database\n            user.update(data.user.id, data.user.firstName + ' ' + data.user.lastName);\n            \n"],[0,"    "]],"start1":440,"start2":440,"length1":159,"length2":8}]],"length":2345,"saved":false}
{"ts":1356914604935,"patch":[[{"diffs":[[0," = [];\n        \n"],[1,"        // Update user information in database\n        user.update(data.user.id, data.user.firstName + ' ' + data.user.lastName);\n            \n        // Search through checkins and stores as critters    \n"],[0,"        for (var"]],"start1":1160,"start2":1160,"length1":32,"length2":237}]],"length":2550,"saved":false}
{"ts":1356914621782,"patch":[[{"diffs":[[0," = [];\n        \n"],[1,"        // Wait until everything is created then update user table\n"],[0,"        promise."]],"start1":2081,"start2":2081,"length1":32,"length2":99}]],"length":2617,"saved":false}
{"ts":1356914718979,"patch":[[{"diffs":[[0,"/user')\n"],[-1,"  "],[0,"\nexports"]],"start1":269,"start2":269,"length1":18,"length2":16},{"diffs":[[0,"orts.get"],[1,"Checkins"],[0," = funct"]],"start1":281,"start2":281,"length1":16,"length2":24},{"diffs":[[0,"    "],[-1,"fsq.Users.getUser('self', token, function(err, data) {\n        if (err) {\n            callback(err);\n        } else {\n            callback(null, data.user);\n        }\n    });\n}\n\nexports.getCheckins ="],[1,"\n}\n\nexports.pull = function(token, callback) {\n    // Perform parallel requests to get FSQ information\n    async.parallel({\n        // Get the user information\n        user:"],[0," fun"]],"start1":328,"start2":328,"length1":207,"length2":181},{"diffs":[[0," user: function("],[-1,"token, "],[1,"sync"],[0,"callback) {\n    "]],"start1":499,"start2":499,"length1":39,"length2":36},{"diffs":[[0,"ccallback) {"],[-1,"\n"],[1," \n        "],[0,"    fsq.User"]],"start1":518,"start2":518,"length1":25,"length2":34},{"diffs":[[0,".get"],[-1,"VenueHistory(null, null"],[1,"User('self'"],[0,", to"]],"start1":553,"start2":553,"length1":31,"length2":19},{"diffs":[[0,"on(err, data) {\n"],[1,"        "],[0,"        if (err)"]],"start1":583,"start2":583,"length1":32,"length2":40},{"diffs":[[0,") {\n            "],[1,"    "],[1,"    sync"],[0,"callback(err);\n "]],"start1":622,"start2":622,"length1":32,"length2":44},{"diffs":[[0,"k(err);\n        "],[1,"   "],[1,"     "],[0,"} else {\n       "]],"start1":657,"start2":657,"length1":32,"length2":40},{"diffs":[[0,"e {\n            "],[1,"      "],[1,"  sync"],[0,"callback(null, d"]],"start1":686,"start2":686,"length1":32,"length2":44},{"diffs":[[0,"ata."],[-1,"venues);\n        }\n    });\n}\n\nexports.pull ="],[1,"user);\n                }\n            });\n        },\n        \n        // Get all checkins\n        checkins:"],[0," fun"]],"start1":730,"start2":730,"length1":52,"length2":114},{"diffs":[[0,"ckins: function("],[-1,"token, "],[1,"sync"],[0,"callback) {\n    "]],"start1":834,"start2":834,"length1":39,"length2":36},{"diffs":[[0,"    "],[-1,"// Perform parallel requests to get FSQ information\n    async.parallel({\n        // Get the user information\n        user: function(cb) { \n            user.get(token, cb"],[1,"        fsq.Users.getVenueHistory(null, null, token, function(err, data) {\n                if (err) {\n                    synccallback(err"],[0,");\n "]],"start1":866,"start2":866,"length1":177,"length2":146},{"diffs":[[0,"k(err);\n        "],[1,"  "],[-1,"},"],[1,"      } else {"],[0,"\n        \n      "]],"start1":1003,"start2":1003,"length1":34,"length2":48},{"diffs":[[0,"    "],[-1,"\n"],[0,"        "],[-1,"// Get all checkins\n        checkins: function(cb) {\n            user.getCheckins(token, cb"],[1,"    synccallback(null, data.venues);\n                }\n            }"],[0,");\n "]],"start1":1040,"start2":1040,"length1":108,"length2":84}]],"length":2649,"saved":false}
{"ts":1356914724581,"patch":[[{"diffs":[[0,"')\n\n"],[-1,"exports.getCheckins = function(token, callback) {\n    \n}\n\n"],[0,"expo"]],"start1":274,"start2":274,"length1":66,"length2":8}]],"length":2591,"saved":false}
{"ts":1356914738447,"patch":[[{"diffs":[[0,"user')\n\n"],[1,"// Pull the latest info from foursquare and update database for a user (based on 4sq token)\n"],[0,"exports."]],"start1":270,"start2":270,"length1":16,"length2":108}]],"length":2683,"saved":false}
